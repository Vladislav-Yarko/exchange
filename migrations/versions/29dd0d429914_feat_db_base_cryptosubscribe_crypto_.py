"""feat(db): Base, CryptoSubscribe, Crypto, CurrencySubscribe, Currency, TelegramUser, User ORM models

Revision ID: 29dd0d429914
Revises: 
Create Date: 2025-08-25 03:35:54.105414

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '29dd0d429914'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('crypto',
    sa.Column('symbol', sa.String(length=100), nullable=False),
    sa.Column('symbol1', sa.String(length=50), nullable=False),
    sa.Column('symbol2', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('currencies',
    sa.Column('symbol', sa.String(length=100), nullable=False),
    sa.Column('symbol1', sa.String(length=50), nullable=False),
    sa.Column('symbol2', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('phoneNumber', sa.String(length=100), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'USER', name='user_role_enum', native_enum=False), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phoneNumber'),
    sa.UniqueConstraint('username')
    )
    op.create_table('crypto_subscribes',
    sa.Column('symbol', sa.String(length=100), nullable=False),
    sa.Column('symbol1', sa.String(length=50), nullable=False),
    sa.Column('symbol2', sa.String(length=50), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('symbolId', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['symbolId'], ['crypto.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('currency_subscribes',
    sa.Column('symbol', sa.String(length=100), nullable=False),
    sa.Column('symbol1', sa.String(length=50), nullable=False),
    sa.Column('symbol2', sa.String(length=50), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('symbolId', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['symbolId'], ['currencies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('telegram_users',
    sa.Column('chatId', sa.BigInteger(), nullable=False),
    sa.Column('phoneNumber', sa.String(length=50), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phoneNumber')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('telegram_users')
    op.drop_table('currency_subscribes')
    op.drop_table('crypto_subscribes')
    op.drop_table('users')
    op.drop_table('currencies')
    op.drop_table('crypto')
    # ### end Alembic commands ###
